---
title: "Conhecendo o pacote geobr"
author: "Beatriz Milz"
date: "2023-11-22"
format: 
  rladies-revealjs:
    footer: "Slides feitos com [Quarto](https://quarto.org/docs/presentations/revealjs/index.html) e [Quarto R-Ladies Theme](https://github.com/beatrizmilz/quarto-rladies-theme#quarto-r-ladies-theme)."
incremental: false
knitr:
  opts_chunk:
    echo: true
    message: false
    warning: false
    error: false
    cache: true
    fig-align: center
---

## Pacote geobr

-   O pacote **geobr** disponibiliza funções para obter diversas bases de dados **espaciais** oficiais do Brasil.

-   O pacote foi desenvolvido e é mantido pela equipe do [IPEA - Instituto de Pesquisa Econômica Aplicada](https://www.ipea.gov.br/portal/).

-   Você pode saber mais no repositório do pacote no GitHub: <https://ipeagit.github.io/geobr/>

# Funções importantes

-   `read_country()`: Delimitação do Brasil

-   `read_state()`: Delimitação dos estados do Brasil

-   `read_state("SP")`: Delimitação de um estado específico, usando a sigla como argumento

-   `read_municipality()`: Delimitação de todos os municípios do Brasil. É uma base pesada!

-   `read_municipality(code_muni = 3550308)`: Delimitação de um município específico, usando o código do IBGE do município.

## Consultando todas as funções disponíveis

-   Função `list_geobr()`

```{r}
#| echo: false
geobr::list_geobr() |> 
  dplyr::select(1, 2, 4) |> 
  reactable::reactable(pagination = TRUE, 
                       defaultPageSize = 5, class = "smaller")
```

## Conceitos importantes: Vetor x Raster

![](img/vector-raster_1644589693.jpeg){fig-align="center"}

::: footer
Fonte da imagem: <https://guides.lib.uw.edu/>
:::

## Com o geobr, trabalhamos com dados vetoriais!

-   **Pontos**: localização de uma escola, ponto de coleta, etc.

-   **Linhas**: ruas/estradas/rodovias, rios, etc.

-   **Polígonos**: delimitação de cidades, estados, países, etc.

## Usamos uma nova classe de dados: sf!

[![](img/sf_horst.png){fig-align="center" width="90%"}](https://github.com/allisonhorst/stats-illustrations)

::: footer
Fonte da imagem: <https://github.com/allisonhorst/stats-illustrations>
:::

# Vamos para alguns exemplos!!

## Ler a delimitação dos estados brasileiros

```{r}
# Carregando pacotes necessários
library(geobr)
library(sf)
library(tidyverse)
```

```{r}
# Lendo os dados da delimitação dos estados brasileiros
brasil_ufs <- read_state(showProgress = FALSE)
```

```{r}
# Classe do objeto
class(brasil_ufs)
```

## Explorando o objeto

```{r}
glimpse(brasil_ufs)
```

## Visualizando os estados brasileiros

```{r}
brasil_ufs |> 
  ggplot() +
  geom_sf()
```

## Filtrando o estado de São Paulo

```{r}
estado_sp <- brasil_ufs |> 
  filter(abbrev_state == "SP") 

estado_sp |>
  ggplot() +
  geom_sf()
```

# E os municípios?

```{r}
# Carregando municípios
brasil_municipios <- read_municipality(showProgress = FALSE)
```

## Explorando o objeto

```{r}
glimpse(brasil_municipios)
```

## Como saber o código IBGE de um município?

-   Você pode consultar o código IBGE de um município no site do [IBGE](https://www.ibge.gov.br/explica/codigos-dos-municipios.php).

[![](img/codigo-muni.png){fig-align="center" width="80%"}](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)

## Filtrando o município de São Paulo

```{r}
muni_sp <- brasil_municipios |> 
  filter(code_muni == 3550308) 
```

## Visualizando o município de São Paulo

```{r}
muni_sp |> 
  ggplot() +
  geom_sf()
```

## E escolas?

```{r}
escolas_brasil <- read_schools(showProgress = FALSE)
```

## Explorando o objeto

```{r}
glimpse(escolas_brasil)
```

## Escolas no município de São Paulo

```{r}
escolas_saopaulo <- escolas_brasil |> 
  filter(abbrev_state == "SP",
         name_muni == "São Paulo") 
```

## Escolas por `government_level`

```{r}
escolas_saopaulo |> 
  count(government_level)
```

## Escolas que oferecem Ensino Médio

```{r}
ensino_medio_sao_paulo <- escolas_saopaulo |> 
  filter(str_detect(education_level, "Ensino Médio"))
```

# Vamos visualizar?

## Visualizando as escolas

```{r}
escolas_saopaulo |> 
  ggplot() +
  geom_sf()
```

## Visualizando as escolas e o município

```{r}
escolas_saopaulo |> 
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf()
```

## Visualizando as escolas por `government_level`

```{r}
escolas_saopaulo |> 
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level))
```

## Visualizando as escolas por `government_level`

```{r}
escolas_saopaulo |> 
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level), show.legend = FALSE) +
  facet_wrap(~government_level)
```

## Visualizando as escolas que oferecem Ensino Médio

```{r}
ensino_medio_sao_paulo |>
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level, alpha = 0.1), show.legend = FALSE) +
  facet_wrap( ~ government_level)
```

## 

Localização das escolas estaduais e escolas privadas no município de São Paulo, que oferecem Ensino Médio

```{r}
#| echo: false
library(ggspatial)
ensino_medio_sao_paulo |>
  filter(government_level %in% c("Estadual", "Privada")) |>
  ggplot() +
  geom_sf(data = muni_sp) +
  geom_sf(aes(color = government_level, alpha = 0.1), show.legend = FALSE) +
  facet_wrap(~ government_level) +
  labs(x = "Longitude",
       y = "Latitude") +
  scale_fill_viridis_d(begin = 0.2, end = 0.9) +
  theme(legend.spacing.x = unit(1.0, 'cm')) +
  theme_bw() +
  theme(
    panel.grid.major = element_line(
      color = gray(0.9),
      linetype = "dashed",
      size = 0.1
    ),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    axis.text.y = element_text(
      angle = 90,
      hjust = 0.5,
      size = 8
    ),
    axis.text.x = element_text(size = 8),
    axis.title.y = element_text(size = rel(0.8)),
    axis.title.x = element_text(size = rel(0.8)),
    legend.title = element_text(size = rel(0.8))
  )
```

## Materiais

-   
